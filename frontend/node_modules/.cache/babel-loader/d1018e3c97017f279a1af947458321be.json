{"ast":null,"code":"class Api {\n  constructor(config) {\n    this._config = config;\n    this._url = this._config.url;\n    this._headers = this._config.headers;\n  }\n\n  _handleResponse(res) {\n    return this._handleResponse(res);\n  }\n\n  getAllData() {\n    return Promise.all([this.getUserInfo(), this.getInitialCards()]);\n  } // получить список всех карточек в виде массива (GET)\n\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(res => {\n      return this._handleResponse(res);\n    }); //.catch(err => this._errorRequestResult(err))\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(res => {\n      return this._handleResponse(res);\n    });\n  }\n\n  editUserInfo(name, about) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(res => {\n      return this._handleResponse(res);\n    });\n  }\n\n  editUserAvatar(url) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: url\n      })\n    }).then(res => {\n      return this._handleResponse(res);\n    });\n  }\n\n  addCard(name, link) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    }).then(res => {\n      return this._handleResponse(res);\n    });\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._url}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => {\n      return this._handleResponse(res);\n    });\n  }\n\n  likeCard(id) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(res => {\n      return this._handleResponse(res);\n    });\n  }\n\n  deleteLike(id) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => {\n      return this._handleResponse(res);\n    });\n  }\n\n}\n\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-24',\n  headers: {\n    authorization: 'eee6724a-7558-44e3-b80b-1f5173ed3e41',\n    'content-type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"sources":["C:/Users/Alexander/dev/mesto-react/src/utils/Api.js"],"names":["Api","constructor","config","_config","_url","url","_headers","headers","_handleResponse","res","getAllData","Promise","all","getUserInfo","getInitialCards","fetch","method","then","editUserInfo","name","about","body","JSON","stringify","editUserAvatar","avatar","addCard","link","deleteCard","id","likeCard","deleteLike","api","authorization"],"mappings":"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","sourcesContent":["class Api {\r\n  constructor(config) {\r\n    this._config = config;\r\n    this._url = this._config.url;\r\n    this._headers = this._config.headers;\r\n  }\r\n\r\n  return;\r\n\r\n  _handleResponse(res) {\r\n    return this._handleResponse(res);\r\n  }\r\n\r\n  getAllData() {\r\n    return Promise.all([this.getUserInfo(), this.getInitialCards()]);\r\n  }\r\n\r\n  // получить список всех карточек в виде массива (GET)\r\n  getInitialCards() {\r\n    return fetch(`${this._url}/cards`, {\r\n      method: 'GET',\r\n      headers: this._headers,\r\n    }).then((res) => {\r\n      return this._handleResponse(res);\r\n    });\r\n    //.catch(err => this._errorRequestResult(err))\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: 'GET',\r\n      headers: this._headers,\r\n    }).then((res) => {\r\n      return this._handleResponse(res);\r\n    });\r\n  }\r\n\r\n  editUserInfo(name, about) {\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: name,\r\n        about: about,\r\n      }),\r\n    }).then((res) => {\r\n      return this._handleResponse(res);\r\n    });\r\n  }\r\n\r\n  editUserAvatar(url) {\r\n    return fetch(`${this._url}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: url,\r\n      }),\r\n    }).then((res) => {\r\n      return this._handleResponse(res);\r\n    });\r\n  }\r\n\r\n  addCard(name, link) {\r\n    return fetch(`${this._url}/cards`, {\r\n      method: 'POST',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: name,\r\n        link: link,\r\n      }),\r\n    }).then((res) => {\r\n      return this._handleResponse(res);\r\n    });\r\n  }\r\n\r\n  deleteCard(id) {\r\n    return fetch(`${this._url}/cards/${id}`, {\r\n      method: 'DELETE',\r\n      headers: this._headers,\r\n    }).then((res) => {\r\n      return this._handleResponse(res);\r\n    });\r\n  }\r\n\r\n  likeCard(id) {\r\n    return fetch(`${this._url}/cards/likes/${id}`, {\r\n      method: 'PUT',\r\n      headers: this._headers,\r\n    }).then((res) => {\r\n      return this._handleResponse(res);\r\n    });\r\n  }\r\n\r\n  deleteLike(id) {\r\n    return fetch(`${this._url}/cards/likes/${id}`, {\r\n      method: 'DELETE',\r\n      headers: this._headers,\r\n    }).then((res) => {\r\n      return this._handleResponse(res);\r\n    });\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  url: 'https://mesto.nomoreparties.co/v1/cohort-24',\r\n  headers: {\r\n    authorization: 'eee6724a-7558-44e3-b80b-1f5173ed3e41',\r\n    'content-type': 'application/json',\r\n  },\r\n});\r\nexport default api;\r\n"]},"metadata":{},"sourceType":"module"}