{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderleontevsky/dev/leontevsky/mesto-react/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { CurrentUserContext } from '../context/CurrentUserContext.js';\nimport api from '../utils/Api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card({\n  card,\n  onCardClick,\n  onCardLike,\n  onCardDelete\n}) {\n  _s();\n\n  const currentUser = React.useContext(CurrentUserContext); // Определяем, являемся ли мы владельцем текущей карточки\n\n  const isOwn = card.owner._id === currentUser._id; // Создаём переменную, которую после зададим в `className` для кнопки удаления\n\n  const cardDeleteButtonClassName = `element__button_delete ${isOwn ? 'element__button_delete' : 'element__button_delete-hidden'}`; // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n\n  const isLiked = card.likes.some(i => i._id === currentUser._id); // Создаём переменную, которую после зададим в `className` для кнопки лайка\n\n  const cardLikeButtonClassName = `element__button ${isLiked ? 'element__button_theme-dark' : 'element__button'}`; // вместо пропса используем конткретные слова\n\n  function handleClick() {\n    onCardClick(card);\n  }\n\n  function handleLikeClick() {\n    onCardLike(card);\n  }\n\n  function handleDeleteClick() {\n    onCardDelete(card);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"element\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"element__image\",\n      src: card.link,\n      alt: card.name,\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"element__caption\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"element__title\",\n        children: card.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"element__actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: cardLikeButtonClassName,\n          onClick: handleLikeClick,\n          id: \"like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"element__button_count\",\n          children: card.likes.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: cardDeleteButtonClassName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"fR8wccA8kuOmI8tLX/QG90sBSlk=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/alexanderleontevsky/dev/leontevsky/mesto-react/src/components/Card.js"],"names":["React","CurrentUserContext","api","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","handleClick","handleLikeClick","handleDeleteClick","link","name","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,kCAAnC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,WAAR;AAAqBC,EAAAA,UAArB;AAAiCC,EAAAA;AAAjC,CAAd,EAA+D;AAAA;;AAC7D,QAAMC,WAAW,GAAGR,KAAK,CAACS,UAAN,CAAiBR,kBAAjB,CAApB,CAD6D,CAE7D;;AACA,QAAMS,KAAK,GAAGN,IAAI,CAACO,KAAL,CAAWC,GAAX,KAAmBJ,WAAW,CAACI,GAA7C,CAH6D,CAK7D;;AACA,QAAMC,yBAAyB,GAAI,0BACjCH,KAAK,GAAG,wBAAH,GAA8B,+BACpC,EAFD,CAN6D,CAU7D;;AACA,QAAMI,OAAO,GAAGV,IAAI,CAACW,KAAL,CAAWC,IAAX,CAAiBC,CAAD,IAAOA,CAAC,CAACL,GAAF,KAAUJ,WAAW,CAACI,GAA7C,CAAhB,CAX6D,CAa7D;;AACA,QAAMM,uBAAuB,GAAI,mBAAkBJ,OAAO,GAAG,4BAAH,GAAkC,iBAAkB,EAA9G,CAd6D,CAgB7D;;AACA,WAASK,WAAT,GAAuB;AACrBd,IAAAA,WAAW,CAACD,IAAD,CAAX;AACD;;AAED,WAASgB,eAAT,GAA2B;AACzBd,IAAAA,UAAU,CAACF,IAAD,CAAV;AACD;;AAED,WAASiB,iBAAT,GAA6B;AAC3Bd,IAAAA,YAAY,CAACH,IAAD,CAAZ;AACD;;AAED,sBACE;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,GAAG,EAAEA,IAAI,CAACkB,IAA1C;AAAgD,MAAA,GAAG,EAAElB,IAAI,CAACmB,IAA1D;AAAgE,MAAA,OAAO,EAAEJ;AAAzE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA,kBAAgCf,IAAI,CAACmB;AAArC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAEL,uBAAjC;AAA0D,UAAA,OAAO,EAAEE,eAAnE;AAAoF,UAAA,EAAE,EAAC;AAAvF;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,uBAAb;AAAA,oBAAsChB,IAAI,CAACW,KAAL,CAAWS;AAAjD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eASE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAEX;AAAjC;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GA1CQV,I;;KAAAA,I;AA4CT,eAAeA,IAAf","sourcesContent":["import React from 'react';\r\nimport { CurrentUserContext } from '../context/CurrentUserContext.js';\r\nimport api from '../utils/Api.js';\r\n\r\nfunction Card({ card, onCardClick, onCardLike, onCardDelete }) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  // Определяем, являемся ли мы владельцем текущей карточки\r\n  const isOwn = card.owner._id === currentUser._id;\r\n\r\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n  const cardDeleteButtonClassName = `element__button_delete ${\r\n    isOwn ? 'element__button_delete' : 'element__button_delete-hidden'\r\n  }`;\r\n\r\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n  const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n\r\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n  const cardLikeButtonClassName = `element__button ${isLiked ? 'element__button_theme-dark' : 'element__button'}`;\r\n\r\n  // вместо пропса используем конткретные слова\r\n  function handleClick() {\r\n    onCardClick(card);\r\n  }\r\n\r\n  function handleLikeClick() {\r\n    onCardLike(card);\r\n  }\r\n\r\n  function handleDeleteClick() {\r\n    onCardDelete(card);\r\n  }\r\n\r\n  return (\r\n    <li className=\"element\">\r\n      <img className=\"element__image\" src={card.link} alt={card.name} onClick={handleClick} />\r\n      <div className=\"element__caption\">\r\n        <h2 className=\"element__title\">{card.name}</h2>\r\n        <div className=\"element__actions\">\r\n          <button type=\"button\" className={cardLikeButtonClassName} onClick={handleLikeClick} id=\"like\"></button>\r\n          <p className=\"element__button_count\">{card.likes.length}</p>\r\n        </div>\r\n      </div>\r\n      <button type=\"button\" className={cardDeleteButtonClassName}></button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n"]},"metadata":{},"sourceType":"module"}