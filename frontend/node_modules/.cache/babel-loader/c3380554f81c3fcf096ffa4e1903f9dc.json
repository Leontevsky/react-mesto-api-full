{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderleontevsky/dev/leontevsky/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\n// import headerLogo from '../images/Vector.svg';\nimport '../index.css';\nimport React from 'react';\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\nimport api from '../utils/Api.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport { CurrentUserContext } from '../context/CurrentUserContext.js';\nimport Login from './Login';\nimport Register from './Register';\nimport InfoTooltip from './InfoTooltip.js';\nimport * as auth from '../utils/auth.js';\nimport successIcon from '../images/success.png';\nimport failIcon from '../images/fail.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isEditPopupOpen, setIsEditPopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\n  const [info, setInfo] = React.useState({\n    icon: '',\n    text: ''\n  });\n  const history = useHistory();\n  const [currentEmail, setCurrentEmail] = React.useState('');\n  React.useEffect(() => {\n    api.getUserInfo().then(module => {\n      setCurrentUser(module);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  React.useEffect(() => {\n    api.getInitialCards().then(module => {\n      setCards(module);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  React.useEffect(() => {\n    const jwt = localStorage.getItem('jwt');\n\n    if (jwt) {\n      auth.checkToken(jwt).then(res => {\n        setLoggedIn(true);\n        setCurrentEmail(res.data.email);\n        history.push('/');\n      }).catch(err => console.log(err));\n    }\n  }, [history]);\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleInfoTooltipContainer({\n    icon,\n    text\n  }) {\n    setInfo({\n      icon: icon,\n      text: text\n    });\n  }\n\n  function handleInfoTooltipOpen() {\n    setIsInfoTooltipOpen(true);\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(state => state.filter(c => c._id !== card._id));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleUpdateUser({\n    name,\n    about\n  }) {\n    api.editUserInfo(name, about).then(updatedUser => {\n      setCurrentUser(updatedUser);\n      setIsEditProfilePopupOpen(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleUpdateAvatar({\n    avatar\n  }) {\n    api.editUserAvatar(avatar).then(updatedUser => {\n      setCurrentUser(updatedUser);\n      setIsEditAvatarPopupOpen(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleAddPlaceSubmit({\n    name,\n    link\n  }) {\n    api.addCard(name, link).then(newCard => {\n      setCards([newCard, ...cards]);\n      setIsAddPlacePopupOpen(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleUserRegistration(email, password) {\n    auth.register(email, password).then(res => {\n      if (res) {\n        handleInfoTooltipContainer({\n          icon: successIcon,\n          text: 'Вы успешно зарегистрировались!'\n        });\n        handleInfoTooltipOpen();\n        setTimeout(history.push, 3500, '/sign-in');\n        setTimeout(closeAllPopups, 3000);\n      } else {\n        console.log('Некорректно заполнено одно из полей!');\n      }\n    }).catch(err => {\n      handleInfoTooltipContainer({\n        icon: failIcon,\n        text: 'Что-то пошло не так! Попробуйте ещё раз.'\n      });\n      handleInfoTooltipOpen();\n      setTimeout(closeAllPopups, 3000);\n      console.log(err);\n    });\n  }\n\n  function handleUserAuthorization(email, password) {\n    auth.authorize(email, password).then(res => {\n      if (res.token) {\n        localStorage.setItem('jwt', res.token);\n        setLoggedIn(true);\n        setCurrentEmail(email);\n        handleInfoTooltipContainer({\n          icon: successIcon,\n          text: 'Вы успешно авторизовались!'\n        });\n        handleInfoTooltipOpen();\n        setTimeout(history.push, 3500, '/');\n        setTimeout(closeAllPopups, 3000);\n      }\n    }).catch(err => {\n      handleInfoTooltipContainer({\n        icon: failIcon,\n        text: 'Что-то пошло не так! Попробуйте ещё раз.'\n      });\n      handleInfoTooltipOpen();\n      setTimeout(closeAllPopups, 3000);\n      console.log(err);\n    });\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard({});\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-in\",\n            children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-up\",\n            children: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            children: loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 32\n            }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/sign-in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onEditAvatar: handleEditAvatarClick,\n          cards: cards,\n          onCardClick: handleCardClick,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        name: \"delete\",\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        submitButton: \"\\u0414\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        onClose: closeAllPopups,\n        isOpen: isInfoTooltipOpen,\n        info: info\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9qXl3X+HzkLMf8g6CgJ9GF+oRCw=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alexanderleontevsky/dev/leontevsky/react-mesto-auth/src/components/App.js"],"names":["React","Redirect","Route","Switch","useHistory","Header","Main","Footer","PopupWithForm","ImagePopup","api","EditProfilePopup","EditAvatarPopup","AddPlacePopup","CurrentUserContext","Login","Register","InfoTooltip","auth","successIcon","failIcon","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","useState","isEditPopupOpen","setIsEditPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","loggedIn","setLoggedIn","isInfoTooltipOpen","setIsInfoTooltipOpen","info","setInfo","icon","text","history","currentEmail","setCurrentEmail","useEffect","getUserInfo","then","module","catch","err","console","log","getInitialCards","jwt","localStorage","getItem","checkToken","res","data","email","push","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","handleCardClick","card","handleInfoTooltipContainer","handleInfoTooltipOpen","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","deleteCard","filter","handleUpdateUser","name","about","editUserInfo","updatedUser","handleUpdateAvatar","avatar","editUserAvatar","handleAddPlaceSubmit","link","addCard","handleUserRegistration","password","register","setTimeout","closeAllPopups","handleUserAuthorization","authorize","token","setItem"],"mappings":"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","sourcesContent":["// import headerLogo from '../images/Vector.svg';\nimport '../index.css';\nimport React from 'react';\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\nimport api from '../utils/Api.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport { CurrentUserContext } from '../context/CurrentUserContext.js';\nimport Login from './Login';\nimport Register from './Register';\nimport InfoTooltip from './InfoTooltip.js';\nimport * as auth from '../utils/auth.js';\nimport successIcon from '../images/success.png';\nimport failIcon from '../images/fail.png';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isEditPopupOpen, setIsEditPopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\n  const [info, setInfo] = React.useState({ icon: '', text: '' });\n  const history = useHistory();\n  const [currentEmail, setCurrentEmail] = React.useState('');\n\n  React.useEffect(() => {\n    api\n      .getUserInfo()\n      .then((module) => {\n        setCurrentUser(module);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  React.useEffect(() => {\n    api\n      .getInitialCards()\n      .then((module) => {\n        setCards(module);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  React.useEffect(() => {\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      auth\n        .checkToken(jwt)\n        .then((res) => {\n          setLoggedIn(true);\n          setCurrentEmail(res.data.email);\n          history.push('/');\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [history]);\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n  function handleInfoTooltipContainer({ icon, text }) {\n    setInfo({ icon: icon, text: text });\n  }\n  function handleInfoTooltipOpen() {\n    setIsInfoTooltipOpen(true);\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api\n      .changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((state) => state.map((c) => (c._id === card._id ? newCard : c)));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleCardDelete(card) {\n    api\n      .deleteCard(card._id)\n      .then(() => {\n        setCards((state) => state.filter((c) => c._id !== card._id));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleUpdateUser({ name, about }) {\n    api\n      .editUserInfo(name, about)\n      .then((updatedUser) => {\n        setCurrentUser(updatedUser);\n        setIsEditProfilePopupOpen(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleUpdateAvatar({ avatar }) {\n    api\n      .editUserAvatar(avatar)\n      .then((updatedUser) => {\n        setCurrentUser(updatedUser);\n        setIsEditAvatarPopupOpen(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleAddPlaceSubmit({ name, link }) {\n    api\n      .addCard(name, link)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        setIsAddPlacePopupOpen(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleUserRegistration(email, password) {\n    auth\n      .register(email, password)\n      .then((res) => {\n        if (res) {\n          handleInfoTooltipContainer({\n            icon: successIcon,\n            text: 'Вы успешно зарегистрировались!',\n          });\n          handleInfoTooltipOpen();\n\n          setTimeout(history.push, 3500, '/sign-in');\n          setTimeout(closeAllPopups, 3000);\n        } else {\n          console.log('Некорректно заполнено одно из полей!');\n        }\n      })\n      .catch((err) => {\n        handleInfoTooltipContainer({\n          icon: failIcon,\n          text: 'Что-то пошло не так! Попробуйте ещё раз.',\n        });\n        handleInfoTooltipOpen();\n\n        setTimeout(closeAllPopups, 3000);\n\n        console.log(err);\n      });\n  }\n\n  function handleUserAuthorization(email, password) {\n    auth\n      .authorize(email, password)\n      .then((res) => {\n        if (res.token) {\n          localStorage.setItem('jwt', res.token);\n          setLoggedIn(true);\n          setCurrentEmail(email);\n          handleInfoTooltipContainer({\n            icon: successIcon,\n            text: 'Вы успешно авторизовались!',\n          });\n          handleInfoTooltipOpen();\n          setTimeout(history.push, 3500, '/');\n          setTimeout(closeAllPopups, 3000);\n        }\n      })\n      .catch((err) => {\n        handleInfoTooltipContainer({\n          icon: failIcon,\n          text: 'Что-то пошло не так! Попробуйте ещё раз.',\n        });\n        handleInfoTooltipOpen();\n\n        setTimeout(closeAllPopups, 3000);\n\n        console.log(err);\n      });\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard({});\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"description\">\n        <div className=\"page\">\n          <Switch>\n            <Route path=\"/sign-in\">\n              <Login />\n            </Route>\n            <Route path=\"/sign-up\">\n              <Register />\n            </Route>\n            <Route>{loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\" />}</Route>\n          </Switch>\n\n          <Main\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            cards={cards}\n            onCardClick={handleCardClick}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardDelete}\n          />\n\n          <Footer />\n        </div>\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n        <PopupWithForm name=\"delete\" title=\"Вы уверены?\" submitButton=\"Да\"></PopupWithForm>\n        <InfoTooltip onClose={closeAllPopups} isOpen={isInfoTooltipOpen} info={info} />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}